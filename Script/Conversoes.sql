CREATE DATABASE EMPRESA;

USE EMPRESA;
GO

CREATE TABLE ALUNO(
	IdAluno INT PRIMARY KEY IDENTITY(1,1),
	NomeAluno VARCHAR(30) NOT NULL,
	Sexo CHAR(1) NOT NULL,
	Nascimento DATE NOT NULL,
	Email VARCHAR(30) UNIQUE
)
go

ALTER TABLE ALUNO
ADD CONSTRAINT CK_SEXO CHECK (Sexo IN('M','F'))
GO

CREATE TABLE ENDERECO(
	IdEndereco INT PRIMARY KEY IDENTITY(100,10),
	Bairro VARCHAR(30),
	UF CHAR(2) NOT NULL, 
	CHECK (UF IN('RJ','SP','MG')),
	IdAluno INT UNIQUE
);
GO

ALTER TABLE ENDERECO ADD CONSTRAINT FK_ENDERECO_ALUNO
FOREIGN KEY (IdAluno) REFERENCES ALUNO (IdAluno)
GO

SP_COLUMNS ALUNO
GO

SP_HELP ALUNO
GO

INSERT INTO ALUNO VALUES('Andre','M','1981-12-04','Andre@gmail.com')
INSERT INTO ALUNO VALUES('Ana','F','1971-12-16','Ana@gmail.com')
INSERT INTO ALUNO VALUES('Rui','M','1961-03-12','Rui@gmail.com')
INSERT INTO ALUNO VALUES('Jao','M','2002-12-09','Joao@gmail.com')
go

INSERT INTO ENDERECO VALUES('FLAMENGO','RJ',1)
INSERT INTO ENDERECO VALUES('MORUMBI','SP',2)
INSERT INTO ENDERECO VALUES('CENTRO','MG',3)
INSERT INTO ENDERECO VALUES('CENTRO','SP',4)
GO

CREATE TABLE TELEFONE(
	IdTelefone INT PRIMARY KEY IDENTITY,
	Tipo CHAR(3) NOT NULL,
	Numero VARCHAR(10) NOT NULL,
	IdAluno INT,
	CHECK (TIPO IN('RES','COM','CEL'))

);
GO

INSERT INTO TELEFONE VALUES('CEL','7899889',1)
INSERT INTO TELEFONE VALUES('RES','8965745',2)
INSERT INTO TELEFONE VALUES('COM','7823657',3)
INSERT INTO TELEFONE VALUES('CEL','9685542',4)

/*PEGA DATA ATUAL*/
SELECT GETDATE()
GO

SELECT A.NomeAluno, T.Tipo, T.Numero, E.Bairro, E.UF
FROM ALUNO A 
INNER JOIN TELEFONE T
ON A.IdAluno = T.IdAluno
INNER JOIN ENDERECO E
ON A.IdAluno = E.IdAluno
GO

SELECT A.NomeAluno, T.Tipo, T.Numero, E.Bairro, E.UF
FROM ALUNO A LEFT JOIN TELEFONE T
ON A.IdAluno = T.IdAluno
INNER JOIN ENDERECO E
ON A.IdAluno = E.IdAluno
GO

SELECT A.NomeAluno,
		ISNULL(T.Tipo, 'Sem') AS "Tipo",
		ISNULL(T.Numero, 'Numero') AS "Telefone",
		E.Bairro,
		E.UF
FROM ALUNO A LEFT JOIN TELEFONE T
ON A.IdAluno = T.IdAluno
INNER JOIN ENDERECO E 
ON A.IdAluno = E.IdAluno
GO

SELECT * FROM ALUNO
GO

SELECT NomeAluno, NASCIMENTO
FROM ALUNO
GO

/*DateDIFF - CALCULA A DIFERENÇA ENTRE 2 DATAS */
/* FUNÇÃO GETDATE() TRAZ DIA E HORA*/

SELECT NomeAluno, GETDATE() AS DIA_HORA FROM ALUNO
GO

SELECT NomeAluno, DATEDIFF(DAY,Nascimento,GETDATE())
FROM ALUNO
GO

SELECT NomeAluno, DATEDIFF(DAY,Nascimento,GETDATE()) AS "IDADE"
FROM ALUNO
GO

/* 3 PASSO - RETORNO EM INTEIRO + OPER MATEMATICA */

SELECT NomeAluno, (DATEDIFF(DAY,Nascimento,GETDATE())/365) AS "IDADE"
FROM ALUNO
GO

SELECT NomeAluno, (DATEDIFF(DAY,Nascimento,GETDATE())/12) AS "IDADE"
FROM ALUNO
GO

SELECT NomeAluno, DATEDIFF(YEAR,Nascimento,GETDATE()) AS IDADE
FROM ALUNO
GO

/* DATENAME - TRAZ O NOME DA PARTE DA DATA EM QUESTAO */

SELECT NomeAluno, DATENAME(MONTH,Nascimento)
FROM ALUNO
GO

SELECT NomeAluno, DATENAME(MONTH,Nascimento) AS "MESES"
FROM ALUNO
GO

SELECT NomeAluno, DATENAME(WEEKDAY,Nascimento) AS "DIAS DA SEMANA"
FROM ALUNO
GO

/* DATEPART - POREM O RETORNO É UM INTEIRO */

----------------------------------------------------
/* TRAZ O MES DA DATA */
SELECT NomeAluno, DATEPART(MONTH, Nascimento) 
FROM ALUNO
GO

SELECT NomeAluno, DATEPART(MONTH, Nascimento) AS MES
FROM ALUNO
GO
-----------------------------------------------------

SELECT NomeAluno, DATEPART(MONTH, NASCIMENTO), DATENAME(MONTH, NASCIMENTO)
FROM ALUNO
GO

SELECT NomeAluno, DATEPART(MONTH, NASCIMENTO) AS DIAMES, DATENAME(MONTH, NASCIMENTO) AS DATAMES 
FROM ALUNO
GO

/* DATEADD - RETORNA UMA DATA SOMANDO A OUTRA DATA */

SELECT DATEADD(DAY,365,GETDATE())

SELECT DATEADD(YEAR,10,GETDATE())

/* CONVERSAO DE DADOS */

SELECT CAST('1' AS INT) + CAST('1' AS INT) AS SOMA
GO

/* CONVERSAO E CONCATENAÇÃO - DE DATAS*/

SELECT NomeAluno,
Nascimento
FROM ALUNO
GO

SELECT NomeAluno,
CAST(DAY(Nascimento) AS VARCHAR) + '/' + 
CAST(MONTH(Nascimento) AS VARCHAR) + '/' + 
CAST(YEAR(Nascimento) AS VARCHAR) AS NASCIMENTO
FROM ALUNO
GO

/*CHARINDEX  - RETORNA UM INTEIRO*/

SELECT NomeAluno, CHARINDEX('A', NomeAluno) AS INDICE
FROM ALUNO
GO

SELECT NomeAluno, CHARINDEX('B', NomeAluno) AS INDICE
FROM ALUNO
GO

SELECT NomeAluno, CHARINDEX('A', NomeAluno,2) AS INDICE
FROM ALUNO
GO

/* BULK INSERT - IMPORTACAO DE ARQUIVOS*/

CREATE TABLE LANÇAMENTO_CONTABIL(
	Conta INT,
	Valor INT,
	Deb_Cred CHAR(1)
	
);
GO

SELECT * FROM LANÇAMENTO_CONTABIL;

/* \t = TAB */

BULK INSERT LANÇAMENTO_CONTABIL
FROM 'C:/ARQUIVOS\CONTAS.txt'
WITH
(
	FIRSTROW = 2,
	DATAFILETYPE = 'char',
	FIELDTERMINATOR = '\t',
	ROWTERMINATOR = '\n'
)

SELECT * FROM LANÇAMENTO_CONTABIL;
SELECT * FROM ALUNO;
SELECT * FROM ENDERECO;
SELECT * FROM TELEFONE;

DELETE FROM LANÇAMENTO_CONTABIL;

/* DESAFIO DO SALDO
QUERY QUE TRAGA O NUMERO DA CONTA
SALDO - DEVEDOR OU CREDOR
*/

/*Encontra Valor D e Valor C - se caso ache coloca o valor 1*/
SELECT CONTA, VALOR,Deb_Cred,
CHARINDEX('D', DEB_CRED) AS DEBITO,
CHARINDEX('C',DEB_CRED) AS CREDITO,
CHARINDEX('C',DEB_CRED)* 2 - 1 AS MULTIPLICADOR
FROM LANÇAMENTO_CONTABIL
GO

SELECT CONTA,
SUM(VALOR * (CHARINDEX('C',DEB_CRED)* 2 - 1)) AS SALDO
FROM LANÇAMENTO_CONTABIL
GROUP BY CONTA
GO
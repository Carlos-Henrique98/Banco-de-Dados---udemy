/*Modelagem basica*/

CLIENTE

NOME CARACTER(30)
CPF NUMERICO(11)
EMAIL CARACTER(30)
TELEFONE CARACTER(30)
SEXO CARACTER (1)
ENDERECO CARACTER(100)

/*PROCESSOS DE MODELAGEM*/

/* ADM DE DADOS */
MODELAGEM CONCEITUAL - RASCUNHO

MODELAGEM LOGICCA - PROGRAMAS COMO RASCUNHO

/*AD - DBA*/

MODELAGEM FISICA - SCRIPT DO BANCO

/* MODELO FISICO */


/*CRIANDO UM BANCO*/

CREATE DATABASE PROJETO;

/* CONECTANDO */

USE PROJETO;

/*CRIANDO A TABELA */

CREATE TABLE CLIENTE(
	NOME VARCHAR(30),
	SEXO CHAR(1);
	EMAIL VARCHAR(30),
	CPF INT(11),
	TELEFONE VARCHAR (11),
	ENDERECO VARCHAR(100),
);

/* VERIFICANDO AS TABELAS */

SHOW TABLE;

/*DESCREVER TABELA*/

DESC CLIENTE;

/* FORMA 01 - EXECUTANDO AS COLUNAS */

INSERT INTO CLIENTE VALUES('JOAO','M','JOAO@GMAIL.COM',988638273,'22369856','MAIA LACERDA - ESTACIO - RIO DE JANEIRO - RJ');
INSERT INTO CLIENTE VALUES('JOAO','M','JOAO@GMAIL.COM',988638273,'22369856','MAIA LACERDA - ESTACIO - RIO DE JANEIRO - RJ');
INSERT INTO CLIENTE VALUES('JOAO','M','JOAO@GMAIL.COM',988638273,'22369856','MAIA LACERDA - ESTACIO - RIO DE JANEIRO - RJ');

/* FORMAA 02 - COLOCANDO AS COLUNAS */

INSERT INTO CLIENTE(NOME,SEXO,ENDERECO,TELEFONE,CPF) VALUES('LILIAN', 'F','SENADOR SOARES - TIJUCA - RIO DE JANEIRO - RJ','996365983',36596845236);

/* FORMA 03 - INSERT CONPACTO - SOMENTE MYSQL */

INSERT INTO CLIENTE VALUES('ANA','F','ANA@GLOBO.COM',855489622,'548556985','PRES ANTONIO CARLOS - CENTRO - SAO PAULO - SP'),
							('CARLA','F','CARLA@TERATI.COM.BR',774562056,'69859636','SAMUEL SILVA - CENTRO BELO HORIZONTE - MG');

INSERT INTO CLIENTE(NOME,SEXO,ENDEREÇO,TELEFONE,CPF) VALUES('LILIAN','F','SENADOR SOARES - TIJUCA - RIO JANEIRO - RJ', '947785666',887774869);

/* A09 - O COMANDO SELECT */

SELECT NOW();

SELECT 'FELIPE MAFRA';

SELECT 'BANCO DE DADOS';

/* ALIAS DE COLUNAS */

SELECT 'FELIPE MADRA' AS PROFESSOR;

SELECT NOME, SEXO, EMAIL FROM CLIENTE;

SELECT NOME, SEXO, EMAIL, ENDEREÇO FROM CLIENTE;

SELECT ENDEREÇO, SEXO, EMAIL FROM CLIENTE;

/* APENAS PARA FINS ACADEMICOS */

SELECT * FROM CLIENTE;

/* FILTRANDO */

SELECT NOME, SEXO FROM CLIENTE
WHERE SEXO = 'M';

SELECT NOME, SEXO FROM CLIENTE
WHERE SEXO = 'F';

SELECT NOME, ENDEREÇO FROM CLIENTE
WHERE SEXO = 'M';

SELECT NOME, SEXO FROM CLIENTE
WHERE ENDEREÇO = 'RJ';

/* UTILIZANDO O LIKE  -ERRADO*/

SELECT NOME, SEXO FROM CLIENTE
WHERE ENDEREÇO LIKE 'RJ';

/* CARACTER CORINGA %  - CERTO*/
/*LIKE DEGRADA A PERFORMANCE */

SELECT NOME, SEXO FROM CLIENTE
WHERE ENDEREÇO LIKE '%RJ';

SELECT NOME, SEXO, ENDEREÇO FROM CLIENTE
WHERE ENDEREÇO LIKE '%CENTRO%';

/* A11 - OPERADORES LOGICOS */

/* OR - OU */

SELECT NOME, SEXO, ENDEREÇO FROM CLIENTE
WHERE
SEXO = 'M' OR ENDEREÇO LIKE '%RJ';

SELECT NOME, EMAIL FROM CLIENTE
WHERE
SEXO = 'F' OR ENDEREÇO LIKE '%ESTACIO';

/* AND - E */

SELECT NOME, EMAIL FROM CLIENTE
WHERE
SEXO = 'M' AND ENDEREÇO LIKE '%RJ';

SELECT NOME, SEXO ENDEREÇO FROM CLIENTE
WHERE
SEXO = 'M' AND ENDEREÇO LIKE '%RJ';

SELECT NOME, EMAIL FROM CLIENTE
WHERE
SEXO = 'F' AND ENDEREÇO LIKE '%ESTACIO';

/* COUNT(*), GROUP BY, PERFORMANCE COM OPERADORES LOGICOS */

/* CONTANDO OS REGISTROS DE UMA TABELA */

/* CARACTERES DENTRO DE ASPAS - DEFINE O NOME DA TABELA*/

SELECT COUNT(*) FROM CLIENTE;

SELECT COUNT(*) AS "QUANTIDADE DE REG TAB CLIENTE" FROM CLIENTE;

SELECT(*) AS "QUANTIDADES" FROM CLIENTE;

/* OPERADOR GROUP BY - AGRUPAR POR*/

SELECT SEXO, COUNT(*) AS "QUANTIDADE"
FROM CLIENTE
GROUP BY SEXO;

/* PERFOMANCE EM OPERADORES LOGICOS */

/* 1 MILHAO DE REGISTROS 

PARA CONTAR
SELECT COUNT(*) FROM CLIENTE;

SELECT SEXO, COUNT(*) FROM CLIENTE
GROUP BY SEXO;

SELECT CIDADE, COUNT(*) FROM CLIENTE
GROUP BY CIDADE

CONDICAO
SEXO = F 
CIDADE = RIO DE JANEIRO
*/

/* A13 - FILTRANDO VALORES NULOS */

SELECT NOME, SEXO, ENDEREÇO
FROM CLIENTE
WHERE EMAIL = NULL;

/* MOSTRE-ME CAMPOS QUE SEJAM NULLOS*/
SELECT NOME, SEXO, ENDEREÇO
FROM CLIENTE
WHERE EMAIL IS NULL;

/* MOSTRE-ME CAMPOS QUE NÃO SEJA NULLO*/
SELECT NOME, SEXO, ENDEREÇO
FROM CLIENTE
WHERE EMAIL IS NOT NULL;

/* A14 - UTILIZANDO O UPDATE PARA ATUALIZAR VALORES - NAO RECOMENDADO */

SELECT NOME, EMAIL
FROM CLIENTE;

UPDATE CLIENTE
SET EMAIL = 'LILIAN@HOTMAIL.COM';

/* UTILIZAR O UPDATE SEMPRE ACOMPANHADO DA CLAUSULA WHERE - RECOMENDADO */

/* ESPECIFICA EM QUAL CAMPO/NOME SERÁ TROCADO PELO EMAIL */
UPDATE CLIENTE
SET EMAIL = 'JOAO@HOTMAIL.COM'
WHERE NOME = 'JOAO';

UPDATE CLIENTE
SET EMAIL = 'JORGE@GMAIL.COM'
WHERE NOME = 'JORGE';

/* PARA VER A TABELA */
SELECT NOME, EMAIL
FROM CLIENTE;

/* A15 - DELETANDO REGISTROS COM A CLAUSULA DELETE */

DELETE FROM CLIENTE; -- DELETA TODA A TABELA

SELECT COUNT(*) FROM CLIENTE; --QUANTIDADE DE CAMPOS

DELETE FROM CLIENTE
WHERE NOME = 'ANA';

SELECT COUNT(*) FROM CLIENTE;

/* A16 - ENTRANDO COM MAIS TELEFONES */

UPDATE CLIENTE
SET TELEFONE = '97865434'
WHERE NOME = 'JOAO';

UPDATE CLIENTE
SET TELEFONE = '22923110 - 97865434'
WHERE NOME = 'JOAO';

SELECT ENDEREÇO, COUNT(*) AS "QUANTIDADE"
FROM CLIENTE
GROUP BY ENDEREÇO;

/* 1º FORMA NORMAL */

/* 1 - TODO CAMPO VETORIZADO SE TORNARA OUTRA TABELA */

/* 2 - TODO CAMPO MULTIVALORADO SE TORNARÁ OUTRA TABELA */

/* 3 - TODA TABELA NECESSITA DE PELO MENOS UM CAMPO QUE IDENTIFIQUE TOOD O REGISTRO COMO SENDO UNICO */

/* A19 - CARDINALIDADE */

/*QUEM DEFINE A CARDINALIDADE É A REGRA DE NEGOCIOS */

/*
PRIMEIRO ALGARISMO - OBRIGATORIEDADE
0 - NÃO OBRIGATORIEDADE
1 - OBRIGATORIEDADE

SEGUNDO ALGARISMO - CARDINALIDADE
1 - MAXIMO DE UM 
N - MAIS DE UM
*/

/* MODELAGEM DE CLIENTE */

CREATE DATABASE COMERCIO;

USE COMERCIO;

CREATE TABLE CLIENTE(
	IDCLIENTE INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30) NOT NULL,
	SEXO ENUM('M','F') NOT NULL,
	EMAIL VARCHAR(50) UNIQUE,
	CPF VARCHAR(15) UNIQUE
);

CREATE TABLE TELEFONE(
	IDTELEFONE INT PRIMARY KEY AUTO_INCREMENT;
	TIPO ENUM('COM','RES','CEL'),
	NUMERO VARCHAR(10),
	ID_CLIENTE INT 
	FOREIGN KEY(ID_CLIENTE)
	REFERENCES CLIENTE(IDCLIENTE)
);

CREATE TABLE ENDERECO(
	IDENRECO INT PRIMARY KEY AUTO_INCREMENT,
	RUA VARCHAR(30) NOT NULL,
	BAIRRO VARCHAR(30 NOT NULL,
	CIDADE VARCHAR(30) NOT NULL,
	ESTADO CHAR(2) NOT NULL,
	ID_CLIENTE INT UNIQUE
	FOREIGN KEY (ID_CLIENTE)
	REFERENCES CLIENTE(IDCLIENTE)
);

/* FOREIGN KEY - CHAVE ESTRANGEIRA - FK*/

/*
=======================================
CHAVE ESTRANGEIRA SEMPRE TEM UNDERLINE = ID_CLIENTE
=======================================
CHAVE PRIMARIA NÃO TEM UNDERLINE = IDCLIENTE
=======================================
*/

/* É A CHAVE PRIMARIA DE UMA TABELA, QUE VAI ATÉ OUTRA
TABELA FAZER REFERENCIA */

/* EM RELACIONAMENTOS 1 x 1 A CHAVE ESTRANGEIRA FICA NA TABELA
MAIS FRACA */

/* EM RELACIONAMENTOS 1 x N A CHAVE ESTRANGEIRA FICARA NA TAVELA N*/

